trigger:
- master

stages:
- stage: Linux
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self
        fetchDepth: 1
      - bash: brew install ninja cmake
        displayName: 'Install Ninja and CMake'
      - bash: cmake -S $(Build.SourcesDirectory)/CMakePresets --preset clang-linux
        displayName: 'CMakePresets Configure clang-linux'
      - bash: cmake --build $(Build.SourcesDirectory)/CMakePresets/build/clang-linux --config Debug
        displayName: 'CMakePresets Build Debug clang-linux'
      - bash: cmake --build $(Build.SourcesDirectory)/CMakePresets/build/clang-linux --config Release
        displayName: 'CMakePresets Build Release clang-linux'
- stage: Windows
  jobs:
  - job:
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        AddressSanitizer Debug:
          MSBuildConfiguration: Debug
        AddressSanitizer Release:
          MSBuildConfiguration: Release
    steps:
      - checkout: self
        fetchDepth: 1
      - task: MSBuild@1
        displayName: 'MSBuild AddressSanitizer'
        inputs:
          solution: 'AddressSanitizer/AddressSanitizer.sln'
          msbuildArchitecture: 'x64'
          configuration: '$(MSBuildConfiguration)'
  - job:
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        Likely Debug:
          MSBuildConfiguration: Debug
        Likely Release:
          MSBuildConfiguration: Release
    steps:
      - checkout: self
        fetchDepth: 1
      - task: MSBuild@1
        displayName: 'MSBuild Likely'
        inputs:
          solution: 'Likely/Likely.sln'
          msbuildArchitecture: 'x64'
          configuration: '$(MSBuildConfiguration)'